HttpSer  vlet
    Java Web 核心/基础  不使用了
    |
  Spring (比较好用 2016 之前)
    |
  Spri ng Boot（2023年依然很流行的）

   Vue  +  Element UI


            后端框架
   Spring Boot  请求到达后端



   http://localhost:8081/test/login 发送请求
   http: 请求协议     http/https
   localhost: 本地 127.0.0.1
   8081: SpringBoot项目部署在哪个端口号下
   /test: XXController中的@RequestMapping("/test")
   /login: 定义在方法上的@GetMapping @PostMapping @RequestMapping()

   请求传参
   http://localhost:8081/test/login?key1=value1&key2=value2
   http://localhost:8081/test/login?username=gaojun&password=123456




    http://localhost:8081/test/login?username=gaojun&password=123456
    拦截器
    /test
    /login
    分配给 TestController 的  login()
    return

    Mybatis  ->   Mybatis Plus



请求的URL：
    url -> @RequestMapping @GetMapping @PostMapping的参数
    http://localhost:项目端口号/类的url/方法的url



前端页面：
    HTML 、 CSS 、JavaScript(会基本使用就可以)
    HTML -> 丑
    <table></table> <form></form>

    HTML、CSS、JS、JQuery
       Bootstrap模版



期末考核：
    13 14 15 16周  考核 题目  16一节 17一节

    组队：1~4人 1个组长 项目分工：高俊（设计表结构、开发用户管理）
    分数：平时成绩（30） + 项目考核分（分工的难度、任务量、代码质量  70） = 总分

    15周结束前 把分组情况以及分工情况发我
    我们组：XXX，XXX，XXX  分工情况：XXX负责XXX  XXX负责XXX

    演示之前把项目完成

项目内容（包括但不仅限于）：
    图书馆管理系统
    后端框架：SpringBoot + 前端：HTML/CSS/JS + 数据库：MySQL
    开发工具：IDEA + Navicat（个人）

    功能列表：
    1.图书管理页面
      图书信息的列表、条件查询（图书名模糊查询、作者模糊查询）、
      图书信息的添加、图书信息的删除、图书信息的更新
      表结构：
        ID、图书全称、作者、发行时间、图书简介、入库时间、完好度（100%）...
    2.借阅管理
      添加一条借阅信息、借阅信息的删除、更新、列表、查询（图书名、借阅人）
      归还（归还时图书的情况）
      表结构：
        ID、图书的ID、借阅人姓名、借阅人学号、借阅人学院、年级、专业、班级、借阅时间、
        应归还时间、实际归还时间、状态（未归还、已归还、已延期、无法归还）...
    3.黑名单管理
      新增、修改、删除、查询（姓名、专业）、解除
      *：在进行图书借阅的时候判断姓名、学号是否在黑名单内并且状态是执行中，禁止借阅。

    function ifCanBorrow() {//判断是否能借阅
           var studentId=$("#studentId").val();
           $.ajax({
               url: "http://localhost:8081/blacklist/borrow",
               type: "GET",
               data: {
                   studentId: studentId
               },

               success:function (                             )              {
                   if(resp.code==200)   //不能借阅
                   {12
                        return false;
                   }=（
                   else
                   {
                   ‘
                    return true;
                   }
               }

           })
      表结构：
        ID、学号、姓名、年级、专业、班级、录入原因、录入时间、解除时间、状态（执行中、已解除）....
    4.图书的订购管理
        订购新增、修改、删除、查询
        到货状态的数据：入库 -> 已入库 （图书表中新增图书信息）
      表结构：
        ID、图书编号、书名、出版社、作者、发行时间、图书简介、订购数量、订购时间
        到货时间、状态（订购中、已入库）


时间安排：
    14周 周六 周日  15周 周日  -> 条件查询、列表显示。新增。删除。更新。
    16周 周日 -> 1节课大家自己准备  2节课轮流演示
    17周 周日1节 -> 没演示的继续演示

    下周五之前  各组长把分组情况发我。
    组长：姓名  班级  学号  联系方式  分工
    组员：姓名  班级  学号  联系方式  分工

步骤：
    显示用户列表数据

    1.先要定义接口（Controller中的方法）
        返回用户的列表数据。
        前端 -> Controller -> Service -> Mapper -> 执行SQL，查询数据，得到结果
        得到结果之后：Mapper -> Service -> Controller -> 前端

    2.请求（请求 + 响应）
        前端 发送请求,携带参数  -> Controller拦截请求 ，得到其中的参数。
        Controller的结果，放在响应中 -> 前端 -> 前端处理数据，展示出来

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    1.后端是否支持查询条件
    2.前端要把查询条件以参数的形式传递给后端

































































































































































































































































































































































































































































































































































































